import {updateMoexTickers} from './updateMoexTickers';
import * as cron from 'node-cron';
import {updateTickers} from './updateTickers';
import {AppDataSource} from '@service/orm';

console.log('‚úÖ –°–µ—Ä–≤–∏—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω.');

let isUpdating = false; // –§–ª–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

async function runUpdate() {
	if (!AppDataSource.isInitialized) {
		await AppDataSource.initialize();
	}

	if (isUpdating) {
		console.log('‚ö† –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—É—Å–∫.');
		return;
	}

	isUpdating = true;
	try {
		console.log('üîÑ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ä–æ–≤...');
		// await updateTickers();
		// await updateMoexTickers();
		console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ä–æ–≤:', error);
	} finally {
		isUpdating = false;
	}
}

// üü¢ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ)
runUpdate();

// ‚è≥ –ó–∞–ø—É—Å–∫–∞–µ–º cron –∫–∞–∂–¥—ã–µ 360 –º–∏–Ω—É—Ç
cron.schedule('*/360 * * * *', async () => {
	console.log('‚è≥ –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ä–æ–≤...');
	await runUpdate();
});
