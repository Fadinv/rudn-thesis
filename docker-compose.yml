services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: portfolio_db
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    env_file:
      - ./.env.shared
      - ./apps/backend/.env.local
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/portfolio_db
    volumes:
      - .:/monorepo
    working_dir: /monorepo/apps/backend
    command: npm run start:dev

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_FORCE_SWCPACKAGE=@next/swc-wasm-nodejs
    depends_on:
      - backend
    volumes:
      - .:/monorepo
      - /monorepo/node_modules
    working_dir: /monorepo/apps/frontend
    command: npm run dev

  ticker-updater:
    build:
      context: .
      dockerfile: apps/ticker-updater/Dockerfile
    env_file:
      - ./.env.shared
      - ./apps/ticker-updater/.env.local
    depends_on:
      - backend
      - postgres
    volumes:
      - .:/monorepo
    working_dir: /monorepo/apps/ticker-updater
    command: npm run start:dev

  analyzer:
    build: ./apps/analyzer
    ports:
      - "8001:8001"
    env_file:
      - ./.env.shared
    environment:
      - UVICORN_CMD=uvicorn main:app --host 0.0.0.0 --port 8001 --limit-max-request-size 100000000
    volumes:
      - ./apps/analyzer:/app

volumes:
  postgres-data:
